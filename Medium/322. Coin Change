/*
    Link: https://leetcode.com/problems/coin-change/submissions/
    Time complexity: O(n*k) where k is 'amount' and n is number of coins
    Space complexity: O(k)
*/
class Solution {
public:
    int coinChange(vector<int>& coins, int amount) {
        
        vector<int> dp(amount+1,amount+1);
        dp[0] = 0;
        
        for(int i = 1; i < amount+1; ++i){
            
            for(int j = 0; j < coins.size(); ++j){
                
                if(coins[j] <= i) dp[i] = min(dp[i],dp[i-coins[j]]+1);
                
            }
            
        }
        
        return dp[amount] == amount+1 ? -1 : dp[amount];
        
        
    }  
        
    
};
