/*
    Link: https://leetcode.com/problems/product-of-array-except-self/submissions/
    Time complexity: O(n)
    Space complexity: O(1) without counting output vector
*/
class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
        
        vector<int> ans;
        ans.resize(nums.size());
        
        int curr = 1;
        for(int i = 0; i < nums.size(); ++i){
            
            if(!i){
                
                ans[i] = 1;
                
            }else{
                
                ans[i] = nums[i-1]*ans[i-1];
                
            }
            
        }
        for(int i = nums.size()-2; i >= 0; --i){
            
            if(i == nums.size()-2){
                
                curr=nums[i+1];
                
            }
            ans[i]*=curr;
            curr*=nums[i];
            
        }
        
        
        
        
        
        return ans;
        
    }
};
