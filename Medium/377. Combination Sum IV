/*
    Link: https://leetcode.com/problems/combination-sum-iv/
    Time complexity: O(k*n)
    Space complexity: O(k)
*/
class Solution {
public:
    int combinationSum4(vector<int>& nums, int target) {
        
        unsigned int waysToMake[1001] = {};
        
        waysToMake[0] = 1;
        sort(nums.begin(),nums.end());
        
        for(int i = 1; i <= target; ++i){
            
            for(int j = 0; j < nums.size(); ++j){
                
                if(nums[j] <= i)
                    waysToMake[i] += waysToMake[i-nums[j]];
                else break;
            }
            
        }
        
        return waysToMake[target];
        
    }
};
