/*
    Link: https://leetcode.com/problems/subarray-sum-equals-k/
    Time complexity: O(n(log(n)))
    Space complexity: O(n)
*/
class Solution {
public:
    int subarraySum(vector<int>& nums, int k) {
        int ans = 0,curr = 0;
        map<int,int> sums;
        sums[0]++;

        for(int i = 0; i < nums.size(); ++i){
            
            curr+=nums[i];
            ans += sums[curr - k];
            sums[curr]++;            
            
        }
        
        return ans;
        
        
    }
};
