/*
    Link: https://leetcode.com/problems/reduce-array-size-to-the-half/
    Time complexity: O(n(log(n)))
    Space complexity: O(n)
*/
class Solution {
public:
    int minSetSize(vector<int>& arr) {
        
        unordered_map<int,int> val;
        priority_queue<int> p;
        for(int i = 0; i < arr.size(); ++i)
            val[arr[i]]++;
        for(auto& ele : val){
            
            p.push(ele.second);
            
        }
        int curr = 0;
        int ans  = 0;
        while(curr < arr.size()/2 && p.size()){
            
            curr+=p.top();
            ++ans;
            p.pop();
            
        }
        return ans;
        
    }
};
