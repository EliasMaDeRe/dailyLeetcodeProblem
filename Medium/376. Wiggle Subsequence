/*
    Link: https://leetcode.com/problems/wiggle-subsequence/
    Time complexity: O(n)
    Space complexity: O(1)
*/
class Solution {
public:
    int wiggleMaxLength(vector<int>& nums) {
        
        if(nums.size() < 2) return nums.size();
        int previdff = nums[1] - nums[0];
        int count = previdff == 0 ? 1 : 2;
        for(int i = 2; i < nums.size(); ++i){
            
            if(previdff <= 0 && nums[i]-nums[i-1] > 0){
                
                ++count;
                previdff = nums[i]-nums[i-1];
                
            }else if(previdff >= 0 && nums[i]-nums[i-1] < 0){
                
                ++count;
                previdff = nums[i]-nums[i-1];
                
            }
            
        }
        return count;
        
        
    }
};
