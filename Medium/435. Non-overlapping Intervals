/*
    Link: https://leetcode.com/problems/non-overlapping-intervals/
    Time complexity: O(n(log(n)))
    Space complexity: O(n) sort space needed
*/
class Solution {
public:
    int eraseOverlapIntervals(vector<vector<int>>& intervals) {
        
        sort(intervals.begin(),intervals.end(),[](auto& left , auto& right){return left[1] < right[1];});
        int counter = 0;
        for(int i = 0; i < intervals.size()-1; ++i){
            
            if(intervals[i][1] > intervals[i+1][0]){
                
                ++counter;
                intervals[i+1][0] = intervals[i][0];
                intervals[i+1][1] = intervals[i][1];

                
            }
            
        }
        return counter;
        
    }
};
