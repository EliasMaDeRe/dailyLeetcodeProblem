/*
    Link: https://leetcode.com/problems/partition-equal-subset-sum/
    Time complexity: O(n*sum(nums))
    Space complexity: O(sum(nums))
*/
class Solution {
public:
    unordered_set<int> sums;
    unordered_set<int> newsums;
    bool canPartition(vector<int>& nums) {
        
        int sum = 0;
        for(int i = 0; i < nums.size(); ++i) sum+=nums[i];
        
        if(sum % 2) return false;
        
        sum/=2;
        sums.insert(0);
        newsums.insert(0);
        
        for(int i = nums.size()-1; i >= 0; --i){
            
            for(auto& ele : sums){
                
                if(ele+nums[i] == sum) return true;
                if(ele+nums[i] < sum)
                    newsums.insert(ele+nums[i]);
                
            }
            
            sums = newsums;
            
        }
        
        return false;
        
        
    }
};
