/*
    Link: https://leetcode.com/problems/number-of-people-aware-of-a-secret/
    Time complexity: O(n^2)
    Space complexity: O(n)
*/
class Solution {
public:

    long long dp[1001] = {};
    int peopleAwareOfSecret(int n, int delay, int forget) {

        dp[0] = 1;
        long long m = 1e9+7;
        
        for(int i = 0; i < n; ++i){
            
            if(!dp[i]) continue;
            
            for(int j = i+delay; j < n && j-i < forget; ++j){
                
                dp[j] += dp[i];
                dp[j]%=m;
                
            }
            
        }
        long long ans = 0;
        for(int i = n-1; i >= n-forget; --i){
            
            ans+=dp[i];
            ans%=m;
            
        } 
        return ans;
    }
 
};
