/*
    Link: https://leetcode.com/problems/koko-eating-bananas/
    Time complexity: O(n(log(n)))
    Space complexity: O(1)
*/
class Solution {
public:
    int minEatingSpeed(vector<int>& piles, int h) {
        
        int s = 1 , e = INT_MIN;
        for(int i = 0; i < piles.size(); ++i){
            
            e = max(e,piles[i]);
            
        }
        while( s <= e){
            
            int count = 0;
            int f = (s+e)/2;
            for(int i = 0; i < piles.size(); ++i){
                
                count+=piles[i]/f;
                if(piles[i] % f) ++count;
                if(count > h){
                    
                    break;
                    
                }
                
            }
            if(count <= h) e = f-1;
            else s = f+1;
            
        }
        
        return s;
        
    }
};
