/*
    Link: https://leetcode.com/problems/merge-two-sorted-lists/submissions/
*/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        
        ListNode* head = NULL;
        ListNode* tail = head;
        
        while(list1 || list2){
            
            if(list1 && list2){
                
                if(list1->val < list2->val){
                    
                    if(!head){
                        
                        head = list1;
                        tail = list1;
                        list1 = list1->next;
                        
                    }else{
                        
                        tail->next = list1;
                        tail = list1;
                        list1 = list1->next;
                    }
                    
                }else{
                    
                    if(!head){
                        
                        head = list2;
                        tail = list2;
                        list2 = list2->next;
                        
                    }else{
                        
                        tail->next = list2;
                        tail =list2;
                        list2 = list2->next;
                        
                    }
                    
                }
                
            }else{
                
                if(list1){
                    
                    if(!head){
                        
                        head = list1;
                        break;
                        
                    }else{
                        
                        tail->next = list1;
                        break;
                        
                    }
                    
                }else{
                    
                    if(!head){
                        
                        head = list2;
                        break;
                        
                    }else{
                        
                        tail->next = list2;
                        break;
                        
                    }
                    
                }
                
            }
            
        }
        
        return head;
        
    }
};
