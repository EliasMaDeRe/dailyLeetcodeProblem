/*
    Link: https://leetcode.com/problems/maximum-units-on-a-truck/submissions/
    Time complexity: O(n(log(n)))
    Space complexity: O(n) (sort)
*/
class Solution {
public:
    int maximumUnits(vector<vector<int>>& boxTypes,int truckSize) {
    
        int counter = 0;
        sort(boxTypes.begin(),boxTypes.end(),[](auto &left, auto &right) {
    return left[1] < right[1];
});
        for(int i = boxTypes.size()-1; i >= 0; --i){
            
            if(truckSize > boxTypes[i][0]){
                
                counter+=boxTypes[i][0]*boxTypes[i][1];
                truckSize-=boxTypes[i][0];
                
            }else{
                
                if(truckSize == boxTypes[i][0]) return counter+=boxTypes[i][0]*boxTypes[i][1];
                else{
                    
                    return counter+=(truckSize)*boxTypes[i][1];
                    
                }
            } 
            
        }
        return counter;
    }
};
