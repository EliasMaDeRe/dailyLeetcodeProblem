/*
    Link: https://leetcode.com/problems/first-missing-positive/
    Time complexity: O(n)
    Space complexity: O(1)
*/
class Solution {
public:
    int firstMissingPositive(vector<int>& nums) {
              
        int ans = 0;
          
        
        for(int i = 0; i < nums.size(); ++i){
            
            while(nums[i] > 0 && nums[i] < nums.size() && nums[nums[i]-1] != nums[i]){
                
                swap(nums[i],nums[nums[i]-1]);
                
            }
            
        }
        
        for(int i = 0; i < nums.size(); ++i){
            
            if(nums[i] != i+1){
                
                ans = i+1;
                return ans;
                
            }
            
        }
        
        ans = nums.back()+1;
        
        return ans;
        
    }
};
