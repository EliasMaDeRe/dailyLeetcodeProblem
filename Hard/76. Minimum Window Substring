/*
    Link: https://leetcode.com/problems/minimum-window-substring/submissions/
    Time complexity: O(n+m)
    Space complexity: O(n+m)
*/
class Solution {
public:
    bool checkArrays(int array1[256], int array2[256]){
        
        for(int i = 0; i < 256; ++i){
            
            if(array1[i] > array2[i]){

                return false;
                
            } 
            
        }
        
        return true;
        
    }
    
    string minWindow(string s, string t) {
        
        int chars[256]={0};
        int chars2[256]={0};
        
        for(int i = 0; i < t.size(); ++i){
            
            chars[t[i]]++;
            
        }
        string ans = "";
        int start = 0, end = 0;
        
        while(start < s.size() && end < s.size()){
            
            chars2[s[end]]++;
            
            while(checkArrays(chars,chars2)){
                

                if(ans == "") ans = s.substr(start,end+1-start);
                chars2[s[start]]--;
                ++start;  
                
                
            }
            ans = (ans.size() > end+1-start) ? s.substr(start-1,end+2-start) : ans;
            ++end;
     
        }
        
        return ans;       
        
    }
};
